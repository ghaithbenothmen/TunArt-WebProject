security:
    enable_authenticator_manager: true
    password_hashers:
        App\Entity\User:
            algorithm: plaintext
    providers:
        database_users:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: database_users
            custom_authenticator: App\Security\UserAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                target: login  # Adjust this to your login route name

            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800
                path: /
                always_remember_me: true
            # other firewall configurations
    access_control:
         #Allow anonymous users to access the login page
        - { path: ^/admin, roles: ROLE_ADMIN  }
        - { path: ^/user, roles: ROLE_CLIENT }
        - { path: ^/artiste, roles: ROLE_ARTISTE }     

        
      

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon